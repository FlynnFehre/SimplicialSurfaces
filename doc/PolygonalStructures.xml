<?xml version="1.0" encoding="UTF-8"?>

<Chapter Label="PolygonalStructures"><Heading>Polygonal Structures</Heading>
    Although we are mostly interested in surfaces, the process of folding 
    naturally leads us to more general structures. Therefore, the most general 
    structure that we consider in this package is a polygonal complex (a 
    generalisation of simplicial surfaces and complexes).
    <Par/>
    Polygonal Complexes are structures that are build from polygons (for the exact
    definition, see section ...), like
    <Alt Only="TikZ">
        \input{Image_ManyExamples.tex}
    </Alt>
    Since we are especially interested in surfaces we need a way to recognize
    them. For technical reasons we split this process into two separate steps,
    with the ramified polygonal surfaces as the intermediate structure betwee
    polygonal complexes and polygons surfaces.
    <Par/>
    In many cases the definitions and algorithms simplify if we only consider
    triangles instead of general polygons. For this reason we also have equivalents
    of these structures that are only build from triangles. We can summarize
    the relationships graphically (higher means more general):
    <Alt Only="TikZ">
        \begin{tikzpicture}[
            % Define the hyperlink structure. This code was adapted from
            % https://tex.stackexchange.com/questions/36109/making-tikz-nodes-hyperlinkable
            hyperlink node/.style={
                alias=sourcenode,
                append after command={
                    let \p1 = (sourcenode.north west),
                        \p2=(sourcenode.south east),
                        \n1={\x2-\x1},
                        \n2={\y1-\y2} in
                    node [inner sep=0pt, outer sep=0pt,anchor=north west,at=(\p1)] 
                        {\hyperref[#1]{\XeTeXLinkBox{\phantom{\rule{\n1}{\n2}}}}}
                    %xelatex needs \XeTeXLinkBox, won't create a link unless it
                    %finds text --- rules don't work without \XeTeXLinkBox.
                    %Still builds correctly with pdflatex and lualatex
                }
            },
            % The style for the boxes
            box/.style={
                rectangle,          % The shape
                inner sep=2ex,      % The size
                draw=black,         % The boundary
                minimum width=5cm   % The minimal width (to make all nodes equal)
            }
        ]
            % Make hyperlink locally invisible
            \hypersetup{hidelinks}

            % Define the nodes
            \node (PC) [box, hyperlink node=PolygonalStructures_complex] {\textbf{Polygonal Complex}};
            \node (TC) [box, right=of PC, xshift=2cm, yshift=-1cm,
                hyperlink node=PolygonalStructures_complex] {Triangular Complex};
	
            \node (RPS) [box, below=of PC] {\textit{Ramified Polygonal Surface}};
            \node (RSS) [box, below=of TC] {\textit{Ramified Simplicial Surface}};
	
	    \node (PS) [box, below=of RPS] {Polygonal Surface};
            \node (SS) [box, below=of RSS] {\textbf{Simplicial Surface}};
	
	    \draw (PC.east) -- (TC.west);
	    \draw (RPS.east) -- (RSS.west);
	    \draw (PS.east) -- (SS.west);
	
	    \draw (PC) -- (RPS) -- (PS);
	    \draw (TC) -- (RSS) -- (SS);
        \end{tikzpicture}
    </Alt>
    <!-- TODO this can be done in Text as well-->

    <Section Label="PolygonalStructures_complex">
        <Heading>Polygonal and Triangular Complexes</Heading>
        
        A polygonal complex is defined by a two-dimensional incidence geometry
        that fulfills some regularity conditions. We will exemplify this by 
        the following surface.
        <Alt Only="TikZ">
            \input{Image_StarOfStarExample.tex}
        </Alt>
        In a two-dimensional incidence geometry we have a set <M>V</M> of
        vertices, a set <M>E</M> of edges and a set <M>F</M> of faces. If we label
        our picture like this,
        <Alt Only="TikZ">
            {
                \def\allLabels{1}
                \input{Image_StarOfStarExample.tex}
            }
        </Alt>
        we have the sets
        <!-- TODO this looks really crappy in LaTeX..-->
        <Par/>
        <M>V = \{1, 2, 3, 4, 5\}</M>
        <Par/>
        <M>E = \{1, 2, 3, 4, 5, 6\}</M>
        <Par/>
        <M>F = \{I, II\}</M>.
        <Par/>
        These sets can't encode the surface on their own. We also need the 
        relations between vertices, edges and faces. For that we define a 
        transitive relation in the union of <M>V \times E</M>, 
        <M>V \times F</M> and <M>E \times F</M>, where <M>(a,b)</M> is in the 
        relation if and only if <M>a</M> is incident to <M>b</M>.
        Since the relation is transitive, it is sufficient to give the tuples
        <!-- TODO "give" is a bad word - what is better? -->
        in <M>V \times E</M> and <M>E \times F</M>. In our example the 
        relation would be generated by
        <Par/>
        <M>\{ (1,1), (1,2), (2,1), (2,3), (2,6), (3,2), (3,3), (3,4), (4,4),
            (4,5), (5,5), (5,6)\}</M>
        <Par/>
        and
        <Par/>
        <M>\{ (1,I), (2,I), (3,I), (3,II), (4,II), (5,II), (6,II) \}</M>.
        <Par/>
        <!-- TODO add "subset VxE" to those? Is that possible? -->


        Instead of a general incidence relation we only want to consider
        those relations that have similar properties to our example. For
        example, every edge should consist of exactly two vertices (more
        formally, for every edge there should be exactly two vertices that
        are incident to it).
        <Par/>
        If we try to generalize this condition to the faces we encounter
        some difficulties. For example, if we only enforce that each face
        has exactly three edges and three vertices, it would be possible
        that two of those edges share all of their vertices. Therefore
        even the case of triangles is quite complicated.
        <Par/>
        We will solve this problem by imposing a cyclic ordering on the
        vertices and edges that are incident to each face, such that those
        are compatible with the incidence structure. Since this definition
        is equally valid for all possible faces (not just triangles), we
        formally define:
        <Par/>

        For every face the number of incident vertices is equal to the number
        of incident edges. Additionally there is an enumeration of the vertices
        (<M>v\colon 1, v\colon 2, ..., v\colon k</M>) and the edges 
        (<M>e\colon 1, e\colon 2, ..., e\colon k</M>) such that exactly the
        vertices <M>v\colon i</M> and <M>v\colon(i+1)</M> are incident to the
        edge <M>e\colon i</M> (where we read indices <M>\bmod k</M>).

        <Par/>
        With these conditions we have guaranteed that our edges and faces
        behave as in our previous example. But they still allow the possibility
        of an incidence relation where we have vertices but no faces. Since
        we want to exclude singular cases like this from our considerations, we
        require that every vertex is incident to at least one edge and that
        every edge is incident to at least one face.
        <!-- TODO should these conditions be displayed more prominently here?-->
        <Par/>




A polygonal complex is now just a two-dimensional incidence geometry that satisfies
these three conditions. It is now easy to check that the examples in
    [picture of many examples]
are all polygonal complexes.




    </Section>

                                    
</Chapter> 
