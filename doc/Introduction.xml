<?xml version="1.0" encoding="UTF-8"?>

<Chapter Label="Introduction"><Heading> Getting started</Heading>
    <Section Label="Introduction_Teaser"><Heading>What can it do?</Heading>
        The SimplicialSurface-package contains this basic functionality:
        <Enum>
            <Item>Working with simplicial surfaces (and generalisations of that), for example: <Par/>
                <Alt Only="TikZ">
                    \begin{tikzpicture}
                        % We need to define the drawing style
        		[edges/.style={black, dashed},
	        	faces/.style={fill=green!40!white, draw=black}]
	
		        % First a tetrahedron
		        \begin{scope}[xshift=0cm]
			    \coordinate (A) at (0,0);
			    \coordinate (B) at (2,0);
		    	    \coordinate (C) at (0.8,1.5);
			    \coordinate (D) at (1.9,0.7);
			
			    \filldraw[faces] (A) -- (B) -- (C) -- cycle;
			    \filldraw[faces] (B) -- (C) -- (D) -- cycle;
			    \draw[edges] (A) -- (D);
		        \end{scope}
		
		        % Second: four triangles in the form of a cone
		        \begin{scope}[xshift=3cm]
			    \coordinate (A) at (0,0);
			    \coordinate (B) at (1.7,0.5);
			    \coordinate (C) at (1.3,1.4);
			    \coordinate (D) at (0.5,1.5);
			    \coordinate (E) at (1,0.7);
			
			    % Take care to draw the faces in the back first
			    \filldraw[faces] (A) -- (B) -- (C) -- cycle;
			    \filldraw[faces] (A) -- (C) -- (D) -- cycle;
			    % Now the faces in the front
			    \filldraw[faces] (A) -- (B) -- (E) -- cycle;
			    \filldraw[faces] (A) -- (E) -- (D) -- cycle;
			    % Finally the dashed line for the "hidden" edge
			    \draw[edges] (A) -- (C);
		        \end{scope}
		
		        % Three triangles that share an edge
		        \begin{scope}[xshift=6cm]
			    \coordinate (A) at (0,0);
			    \coordinate (B) at (0,1.5);
			    \coordinate (C) at (-0.7,0.4);
			    \coordinate (D) at (0.8,0.4);
			    \coordinate (E) at (0.9,0.8);
			
		    	    % draw back face first
			    \filldraw[faces] (A) -- (B) -- (E) -- cycle;
			    % Now draw front faces
			    \filldraw[faces] (A) -- (B) -- (C) -- cycle;
			    \filldraw[faces] (A) -- (B) -- (D) -- cycle;
			    % Draw dashed line
			    \draw[edges] (A) -- (E);
		        \end{scope}
		
		        % A butterfly of triangles
		        \begin{scope}[xshift=9cm]
			    \def\LUX{-0.8}
			    \def\LUY{-0.3}
			    \def\LMX{-1.2}
			    \def\LMY{0.5}
			    \def\LOX{-0.5}
			    \def\LOY{1}
			    \coordinate (A) at (0,0);
			    \coordinate (B) at (\LUX,\LUY);
			    \coordinate (C) at (\LMX,\LMY);
			    \coordinate (D) at (\LOX,\LOY);
			    \coordinate (E) at (-\LOX,\LOY);
			    \coordinate (F) at (-\LMX,\LMY);
			    \coordinate (G) at (-\LUX,\LUY);
			
	        	    \filldraw[faces] (A) -- (B) -- (C) -- cycle;
			    \filldraw[faces] (A) -- (C) -- (D) -- cycle;
			    \filldraw[faces] (A) -- (E) -- (F) -- cycle;
			    \filldraw[faces] (A) -- (F) -- (G) -- cycle;
		        \end{scope}
		
		        % An open cone of two triangles
		        \begin{scope}[xshift=1cm, yshift=-3cm]
			    \coordinate (A) at (0,0);
			    \coordinate (B) at (1.3,0.4);
			    \coordinate (C) at (0.4,1.3);
			
			    \filldraw[faces] (A) -- (B) to[bend right=45] (C) -- cycle;
			    \filldraw[faces] (A) -- (B) to[bend left=45] (C) -- cycle;
		        \end{scope}
		
		        % A surface from non-triangular shapes
		        \begin{scope}[xshift=4cm, yshift=-3cm]
			    \coordinate (A) at (0,0);
			    \coordinate (B) at (1,0);
			    \coordinate (C) at (0.5,0.6);
			    \coordinate (D) at (0,1);
			    \coordinate (E) at (0.5,1.3);
			    \coordinate (F) at (1,1);
			    \coordinate (G) at (1.7,0.8);
			    \coordinate (H) at (1.8,0.2);
			
			    \filldraw[faces] (A) -- (B) -- (C) -- cycle;
			    \filldraw[faces] (A) -- (C) -- (D) -- cycle;
			    \filldraw[faces] (D) -- (C) -- (F) -- (E) -- cycle;
			    \filldraw[faces] (C) -- (F) -- (G) -- (H) -- (B) -- cycle;
		        \end{scope}
                    \end{tikzpicture}
                </Alt>
            </Item>
            <Item>Working with edge colourings of simplicial surfaces (in general and for the purpose of an embedding). <!--TODO--> </Item>
            <Item>Treatment of folding and unfolding for these objects. <!--TODO--> </Item>
        </Enum>
        To use this package, you have to load it into GAP via
<Log>
gap&gt; LoadPackage("SimplicialSurfaces");
true
</Log>

    </Section>

    <Section Label="Introduction_Playing"><Heading>Playing with simplicial surfaces</Heading>
        Since the platonic solids are pre-defined we use them to show a few capabilities of this package.
        <!-- This sentence informs the user about a way to define some surfaces which helps them to test more cases themselves.
             It also connects the surfaces to something familiar. The formulation of this sentence is still dangerous as it should
             neither promise too much, nor trivialize the contents of this section. (TODO) -->
        We will use the cube as an example.<Par/>
        <Alt Only="TikZ">
            \begin{tikzpicture}
                % We need to define the drawing style
                [vertex/.style={blue},
                edges/.style={black, thick}]
	
                \coordinate (FDL) at (0,0); % front down left
                \coordinate (FDR) at (2,0); % front down right
                \coordinate (FUL) at (0,2); % front up left
                \coordinate (BDL) at (1,1); % back up left
                \coordinate (BDR) at ($(FDR)+(BDL)$); % back down right
                \coordinate (FUR) at ($(FUL)+(FDR)$); % front up right
                \coordinate (BUL) at ($(FUL)+(BDL)$); % back up left
                \coordinate (BUR) at ($(FDR)+(FUL)+(BDL)$); % back up right

                % Draw the edges
                \foreach \x in {FDL, BDR, BUL}{
                    \draw[dashed, edges] (BDL) -- (\x);
                }
                \draw[edges] (FDL) -- (FDR) -- (FUR) -- (FUL) -- cycle;
                \draw[edges] (FDR) -- (BDR) -- (BUR) -- (FUR) -- cycle;
                \draw[edges] (FUL) -- (FUR) -- (BUR) -- (BUL) -- cycle;

                % Draw the vertices
                \foreach \x in {FDL, FDR, FUL, BDL, BDR, FUR, BUL, BUR} {
                    \fill[vertex] (\x) circle (2.5pt);
                }
            \end{tikzpicture}
        </Alt>
<Example>
gap&gt; surface := Cube();;
</Example>
        <!-- TODO Draw a picture of a cube -->
        We can compute elementary properties of the surface
<Example>
gap&gt; NrOfVertices(surface);
8
gap&gt; NrOfEdges(surface);
12
gap&gt; NrOfFaces(surface);
6
gap&gt; EulerCharacteristic(surface);
2
</Example>
        and we can show that the surface is homeomorphic to a sphere by verifying that it is closed, connected and orientable.
<Example>
gap&gt; IsClosedSurface(surface);
true
gap&gt; IsConnected(surface);
true
gap&gt; IsOrientable(surface);
true
</Example>
        We can also compute more complicated properties like the automorphism group and check for isomorphisms between surfaces. 
    <!-- TODO do so--> 
        
    </Section>


    <Section Label="Introduction_EasyConstruction"><Heading>Constructing some surfaces</Heading>
        In the most cases one is not interested in the properties of platonic solids (usually one already knows a lot about them). Therefore we need a way to tell the package about the surfaces we are interested in. As a test case we consider three triangles that are connected by edges, like this:
        <Alt Only="TikZ">
            \begin{tikzpicture}

            \end{tikzpicture}
        </Alt>
        <!-- TODO define global styles for this document -->
    </Section>

</Chapter>

