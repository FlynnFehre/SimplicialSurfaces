##############################################################################
##
#W  simplicial.gd          Simplicial                       Alice Niemeyer
##
##
#Y  Copyright (C) 2016-2017, Alice Niemeyer, Lehrstuhl B f√ºr Mathematik,
#Y  RWTH Aachen
##
##  This file is free software, see license information at the end.
##
##  This file contains the declaration part of the Simplicial package.
##

#############################################################################
##
#!  @Chapter Wild Coloured Simplicial Surfaces
##
#!  A simplicial surface is called **wild-coloured** if there exists a 
#!  map 
#!
#!

DeclareInfoClass( "InfoSimplicial" );
SetInfoLevel(InfoSimplicial,1);


#############################################################################
##
##
#!  @Section Basic functions for Wild Coloured Simplicial Surfaces
#!
#!
#!

#############################################################################
##
##
#!  @Description
#!  This function returns the list of faces of a  simplicial surface.
#!  Each face of the surface is represented by a number $f$.
#!  @Returns a list
#!  @Arguments simpsurf
#!
DeclareGlobalFunction( "FacesOfSimplicialSurface" );
#############################################################################
##
##
#!  @Description
#!  This function returns the number of faces of a  simplicial surface.
#!  @Returns an integer
#!  @Arguments simpsurf
#!
DeclareGlobalFunction( "NrOfFacesOfSimplicialSurface" );
#############################################################################
##
##
#!  @Description
#!  This function returns the list of edges of a  simplicial surface.
#!  Each edge of the surface is represented by a pair of numbers $[f_1,f_2]$,
#!  where $f_1$ and $f_2$ are faces that are incident to the edge $[f_1,f_2]$.
#!  @Returns a list
#!  @Arguments simpsurf
#!
DeclareGlobalFunction( "EdgesOfSimplicialSurface" );
#############################################################################
##
##
#!  @Description
#!  This function returns the number of edges of a  simplicial surface.
#!  @Returns an integer
#!  @Arguments simpsurf
#!
DeclareGlobalFunction( "NrOfEdgesOfSimplicialSurface" );
#############################################################################
##
##
#!  @Description
#!  This function returns the list of vertices of a  simplicial surface.
#!  Each vertex of the simplicial surface is represented by a vertex 
#!  defining path.
#!  @Returns a list
#!  @Arguments simpsurf
#!
DeclareGlobalFunction( "VerticesOfSimplicialSurface" );
#############################################################################
##
##
#!  @Description
#!  This function returns the number of vertices of a  simplicial surface.
#!  @Returns an integer
#!  @Arguments simpsurf
#!
DeclareGlobalFunction( "NrOfVerticesOfSimplicialSurface" );
#############################################################################
##
##
#!  @Description
#!  This function returns a triple of involutions which are the generators
#!  of a wild coloured  simplicial surface.
#!  @Returns list
#!  @Arguments simpsurf
#!
DeclareGlobalFunction( "GeneratorsOfSimplicialSurface" );
#############################################################################
##
##
#!  @Description
#!  This function takes as input a simplicial surface and returns a list of 
#!  integers, one for each vertex. The integer for a vertex is the degree of 
#!  this vertex.
#!  @Returns list
#!  @Arguments simpsurf
#!
DeclareGlobalFunction( "DegreesOfSimplicialSurface" );
#############################################################################
##
##
#!  @Description
#!  This function returns the group generated by the triple of involutions
#!  which are the generators of the wild coloured simplicial surface.
#!  @Returns a group
#!  @Arguments simpsurf
#!
DeclareGlobalFunction( "GroupOfSimplicialSurface" );
#############################################################################
##
##
#!  @Description
#!  This function computes the Euler characteristic of a simplicial surface.
#!  The Euler characteristic is |V| - |E| + |F|, where |V| is the number of
#!  vertices, |E| is the number of edges and |F| is the number of faces.
#!  @Returns an integer, the Euler characteristic.
#!  @Arguments simpsurf
#!
DeclareGlobalFunction( "EulerCharacteristic");


#############################################################################
##
##
#!  @Section Functions for Wild Coloured Simplicial Surfaces
#!
#!
#!
DeclareGlobalFunction( "MrTypeOfSimplicialSurface" );
#############################################################################
##
##  AllSimplicialSurfaces( gens[, mrtype] ) . . . . all simplicial surfaces
##  AllSimplicialSurfaces( grp[, mrtype] )
##  AllSimplicialSurfaces( sig1, sig2, sig3[, mrtype] )
##
##
#!  @Description
#!  This function computes all wild-coloured simplicial surfaces generated
#!  by a triple of involutions as specified in the input. If the optional
#!  argument <mrtype> is present, only those wit a predefined mrtype are
#!  constructed.
#!  The involution triple can be given to the function in various ways.
#!  Either they are input as a list <gens> of three involutions, or as
#!  a group <grp> whose generators are the tree involutions, or they can
#!  be input into the function as three arguments, one for each involution.
#! 
#!  In case the optional argument <mrtype>  is present, it can be used to
#!  restrict to wild-colourings for which some or all edges have a predefined
#!  colour. This is equivalent to marking the cycles of the three involutions
#!  as follows. If the edge $(j, j^\sigma_i)$ of the involution $\sigma_i$ is
#!  to be a reflection (mirror) let $k=1$, if it is to be a rotation, let 
#!  $k=2$ and if it can be either let $k=0.$ Then set $mrtype[i][j] = k$.
#!  @Returns a list of all wild-coloured simplicial surfaces with generating
#!  set given by three involutions.
#!  The function AllSimplicialSurfaces when called with the optional argument
#!  <mrtype> now returns all wild-coloured simplicial surfaces whose edges
#!  are coloured according to the restrictions imposed by <mrtype>.
#!  @Arguments gens,  a list of three involutions
#!
DeclareGlobalFunction( "AllSimplicialSurfaces" );
DeclareGlobalFunction( "SimplicialSurface" );
DeclareGlobalFunction( "VertexRelationOfEdge" );
DeclareGlobalFunction( "VertexGroupOfSimplicialSurface" );
DeclareGlobalFunction( "IsOrientableSimplicialSurface" );
DeclareGlobalFunction( "GeneratorsFromEdgesOfPlainSimplicialSurface");
DeclareGlobalFunction( "GeneratorsFromEdgesOfSimplicialSurface");
DeclareGlobalFunction( "WildSimplicialSurfacesFromFacePath");
DeclareGlobalFunction( "WildSimplicialSurfacesFromPlainSurface");
DeclareGlobalFunction( "SnippOffEars");
DeclareGlobalFunction( "SixFoldCover");
DeclareGlobalFunction( "AllStructuresSimplicialSurface");
DeclareGlobalFunction( "StructuresSimplicialSurface");
#DeclareGlobalFunction( "ImageSimplicialSurface");
DeclareGlobalFunction( "GenericSurfaceFromWildSimplicialSurface" );
DeclareGlobalFunction( "WildSimplicialSurfacesFromGenericSurface" );
DeclareGlobalFunction( "CommonCover");
#
###  This program is free software: you can redistribute it and/or modify
###  it under the terms of the GNU General Public License as published by
###  the Free Software Foundation, either version 3 of the License, or
###  (at your option) any later version.
###
###  This program is distributed in the hope that it will be useful,
###  but WITHOUT ANY WARRANTY; without even the implied warranty of
###  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
###  GNU General Public License for more details.
###
###  You should have received a copy of the GNU General Public License
###  along with this program.  If not, see <http://www.gnu.org/licenses/>.
###
